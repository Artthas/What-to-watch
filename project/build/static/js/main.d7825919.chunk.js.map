{"version":3,"sources":["services/api.ts","services/token.ts","const.ts","components/footer/footer.tsx","components/preview-player/preview-player.tsx","components/movie-card/movie-card.tsx","components/movie-list/movie-list.tsx","components/genre-list/genre-list.tsx","types/action.ts","store/action.ts","components/show-more/show-more.tsx","components/logo/logo.tsx","store/root-reducer.ts","store/films-data/films-data.ts","store/films-other-data/films-other-data.ts","store/user-data/user-data.ts","store/user-data/selectors.ts","store/api-actions.ts","components/authorization/authorization.tsx","components/header/header.tsx","store/films-data/selectors.ts","store/films-other-data/selectors.ts","components/main/main.tsx","components/error-screen/error-screen.tsx","components/add-review/add-review.tsx","components/movie-page-overview/movie-page-overview.tsx","components/movie-page-details/movie-page-details.tsx","components/movie-page-reviews/movie-page-reviews.tsx","components/movie-page/movie-page.tsx","components/my-list/my-list.tsx","components/loading-screen/loading-screen.tsx","components/player/player.tsx","components/sign-in/sign-in.tsx","components/not-found-screen/not-found-screen.tsx","components/private-route/private-route.tsx","components/app/app.tsx","index.tsx"],"names":["HttpCode","AUTH_TOKEN_KEY_NAME","saveToken","token","localStorage","setItem","AppRoute","AuthorizationStatus","APIRoute","Footer","className","to","PreviewPlayer","film","width","height","autoPlay","muted","src","preview_video_link","type","MovieCard","timeOutId","isSimilarFilm","useState","Boolean","isActive","setIsActive","removeIsActive","clearTimeout","history","useHistory","onMouseOver","setTimeout","onMouseOut","onClick","push","id","preview_image","alt","name","MovieList","films","map","GenreList","ActionType","props","genre","onUserClick","filmsGenres","uniqeFilmsGenres","Set","onUserClickWrapper","evt","preventDefault","target","textContent","href","currentGenre","changeGenre","createAction","ChangeGenre","genreName","payload","loadFilms","LoadFilms","loadMyFilms","LoadMyFilms","myFilms","loadCurrentFilm","LoadCurrentFilm","currentFilm","loadPromoFilm","LoadPromoFilm","promoFilm","loadSimilarFilms","LoadSimilarFilms","similarFilms","loadComments","LoadComments","comments","requireAuthorization","RequireAuthorization","authStatus","saveUserAvatarUrl","SaveUserAvatarUrl","userEmail","requireLogout","RequireLogout","ShowMore","onShowMoreClick","Logo","NameSpace","filmsData","createReducer","builder","addCase","state","action","filmsOtherData","initialState","authorizationStatus","Unknown","isDataLoaded","userAvatarUrl","userData","NoAuth","rootReducer","combineReducers","filmsOther","user","getAuthorizationStatus","getIsDataLoaded","getUserAvatarUrl","fetchCurrentFilmAction","movieId","dispatch","_getState","api","a","get","Films","data","fetchPromoFilmAction","Promo","fetchMyFilmsAction","MyFilms","postMyFilmAction","status","post","Authorization","useDispatch","Auth","delete","Logout","removeItem","SignIn","Header","isMyList","isSignIn","headerTitle","useSelector","MyList","getFilms","getSimilarFilms","getCurrentFilm","getPromoFilm","getMyFilms","getGenre","getComments","Main","count","setCountData","filteredFilms","setFilteredFilms","useEffect","tempFilteredFilms","filter","length","slice","poster_image","released","viewBox","String","Number","is_favorite","ErrorScreen","handleClose","Fragment","AddReview","onSubmit","rating","comment","setDisabledAttributeBtn","setDisabledAttributeForm","onSuccess","onFail","Comments","postCommentAction","isErrorShown","setIsErrorShown","useParams","find","item","parseInt","review","setReview","disabledAttributeBtn","disabledAttributeForm","background_image","idx","prevState","value","disabled","htmlFor","placeholder","onChange","commentHandler","maxLength","minLength","MoviePageOverview","undefined","getLevelComponentByRating","scores_count","description","director","starring","join","MoviePageDetails","run_time","MoviePageReviews","firstHalfOfComments","secondHalfOfComments","firstHalfOfCommentsCount","Math","ceil","dateTime","Date","date","toLocaleString","day","year","month","MoviePage","onFavoriteClick","component","setComponent","store","fetchCommentAction","fetchSimilarFilmsAction","onTabClick","useCallback","currentTarget","innerText","filmData","getComponentByType","LoadingScreen","Player","videoRef","useRef","isPlaying","setIsPlaying","durationTime","setDuration","progressBar","setProgressBar","isComponentDownLoaded","setIsComponentDownLoaded","convertSecondsToTime","seconds","currentSeconds","convertedHours","getHours","convertedMinutes","getMinutes","convertedSeconds","getSeconds","timeMember","video","current","onloadeddata","duration","ontimeupdate","currentTime","progressValue","handlePausedChange","paused","play","pause","video_link","poster","ref","onPlay","onPause","max","style","left","requestFullscreen","authData","email","password","Login","avatarUrl","avatar_url","loginAction","emailRef","passwordRef","re","test","Root","setCustomValidity","reportValidity","NotFoundScreen","PrivateRoute","exact","path","render","App","isCheckedAuth","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","error","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","createAPI","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7825919.chunk.js","sourcesContent":["import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosError} from 'axios';\nimport {getToken} from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nenum HttpCode {\n  Unauthorized = 401,\n}\n\ntype UnauthorizedCallback = () => void;\n\nexport const createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n","const AUTH_TOKEN_KEY_NAME = 'T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","export enum AppRoute {\n  Root = '/',\n  MyList = '/mylist',\n  MoviePage = '/films/:movieId',\n  AddReview = '/films/:movieId/review',\n  Player = '/player/:movieId',\n  SignIn = '/login'\n}\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum APIRoute {\n  Films = '/films',\n  Comments = '/comments',\n  MyFilms = '/favorite',\n  Promo = '/promo',\n  Login = '/login',\n  Logout = '/logout',\n}\n","import {Link} from 'react-router-dom';\n\nfunction Footer(): JSX.Element {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"logo\">\n        <Link className=\"logo__link logo__link--light\" to=\"/\">\n          <span className=\"logo__letter logo__letter--1\">W</span>\n          <span className=\"logo__letter logo__letter--2\">T</span>\n          <span className=\"logo__letter logo__letter--3\">W</span>\n        </Link>\n      </div>\n\n      <div className=\"copyright\">\n        <p>© 2019 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import {Film} from '../../types/film';\n\ntype PreviewPlayerProps = {\n  film: Film,\n}\n\nfunction PreviewPlayer({film}: PreviewPlayerProps): JSX.Element {\n  return (\n    <video width=\"280\" height=\"175\" autoPlay muted>\n      <source src={film.preview_video_link} type='video/webm; codecs=\"vp8, vorbis\"'></source>\n      <source src={film.preview_video_link} type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'></source>\n    </video>\n  );\n}\n\nexport default PreviewPlayer;\n","import {useState} from 'react';\nimport {Film} from '../../types/film';\nimport {Link, useHistory} from 'react-router-dom';\nimport PreviewPlayer from '../preview-player/preview-player';\n\ntype MovieCardProps = {\n  film: Film,\n  isSimilarFilm: boolean\n}\n\nfunction MovieCard({film, isSimilarFilm}: MovieCardProps): JSX.Element {\n  const [isActive, setIsActive] = useState(Boolean);\n  let timeOutId: ReturnType<typeof setTimeout>;\n\n  function setIsActiveDelayed() {\n    timeOutId = setTimeout(() => setIsActive(true), 1000);\n  }\n\n  function removeIsActive() {\n    clearTimeout(timeOutId);\n    setIsActive(false);\n  }\n\n  const history = useHistory();\n\n  return (\n    <article\n      className=\"small-film-card catalog__films-card\"\n      onMouseOver={setIsActiveDelayed}\n      onMouseOut={removeIsActive}\n      onClick={() => {\n        removeIsActive();\n        history.push(`${!isSimilarFilm ? 'films/' : ''}${film.id}`);\n      }}\n    >\n      <div className=\"small-film-card__image\">\n        {isActive\n          ? <PreviewPlayer film={film}/>\n          : <img src={film.preview_image} alt={film.name} width=\"280\" height=\"175\" />}\n      </div>\n      <h3 className=\"small-film-card__title\">\n        <Link className=\"small-film-card__link\" to={`${film.id}`} onClick={removeIsActive}>{film.name}</Link>\n      </h3>\n    </article>\n  );\n}\n\nexport default MovieCard;\n","import {Films} from '../../types/film';\nimport MovieCard from '../movie-card/movie-card';\n\ntype MovieListProps = {\n  films: Films,\n  isSimilarFilm: boolean\n}\n\nfunction MovieList({films, isSimilarFilm}: MovieListProps): JSX.Element {\n\n  return (\n    <div className=\"catalog__films-list\">\n      {films.map((film) => <MovieCard isSimilarFilm={isSimilarFilm} film={film} key={film.id} />)}\n    </div>\n  );\n}\n\nexport default MovieList;\n","import {Films} from '../../types/film';\nimport { MouseEvent } from 'react';\n\ntype GenreListProps = {\n  onUserClick(genreName: string | null): void,\n  films: Films,\n  genre: string,\n}\n\nfunction GenreList(props: GenreListProps): JSX.Element {\n  const {films, genre, onUserClick} = props;\n\n  const filmsGenres = films.map((film) => film.genre);\n\n  const uniqeFilmsGenres = [...new Set(filmsGenres)];\n\n  function onUserClickWrapper(evt: MouseEvent<HTMLLIElement>): void {\n    evt.preventDefault();\n    onUserClick((evt.target as HTMLLIElement).textContent);\n  }\n\n  return (\n    <ul className=\"catalog__genres-list\">\n      <li\n        className={`catalog__genres-item ${genre === 'All genres' ? 'catalog__genres-item--active' : ''}`}\n        onClick={onUserClickWrapper}\n      >\n        <a href=\"/\" className=\"catalog__genres-link\">All genres</a>\n      </li>\n      {uniqeFilmsGenres.map((currentGenre) =>\n        (\n          <li\n            className={`catalog__genres-item ${currentGenre === genre ? 'catalog__genres-item--active' : ''}`}\n            key={currentGenre}\n            onClick={onUserClickWrapper}\n          >\n            <a href=\"/\" className=\"catalog__genres-link\">{currentGenre}</a>\n          </li>\n        ),\n      )}\n    </ul>\n  );\n}\n\nexport default GenreList;\n","import {Action} from 'redux';\nimport {\n  ThunkAction,\n  ThunkDispatch\n} from 'redux-thunk';\nimport {\n  AxiosInstance\n} from 'axios';\nimport {State} from '../types/state';\n\nexport enum ActionType {\n  ChangeGenre = 'films/changeGenre',\n  LoadFilms = 'films/loadFilms',\n  LoadCurrentFilm = 'films/loadCurrentFilm',\n  LoadPromoFilm = 'films/loadPromoFilm',\n  LoadSimilarFilms = 'films/loadSimilarFilms',\n  LoadMyFilms = 'films/loadMyFilms',\n  LoadComments = 'comments/loadComments',\n  ShowMoreFilms = 'data/showMoreFilms',\n  RequireAuthorization = 'user/requireAuthorization',\n  RequireLogout = 'user/requireLogout',\n  UserAuthorization = 'user/userAuthorization',\n  SaveUserAvatarUrl = 'user/saveUserAvatarUrl',\n}\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Action>;\n\nexport type ThunkAppDispatch = ThunkDispatch<State, AxiosInstance, Action>;\n","import {ActionType} from '../types/action';\nimport {Films, Film} from '../types/film';\nimport {Comments} from '../types/comment';\nimport {AuthorizationStatus} from '../const';\nimport {createAction} from '@reduxjs/toolkit';\n\nexport const changeGenre = createAction(\n  ActionType.ChangeGenre,\n  (genreName: string) => ({\n    payload: genreName,\n  }),\n);\n\nexport const loadFilms = createAction(\n  ActionType.LoadFilms,\n  (films: Films) => ({\n    payload: films,\n  }),\n);\n\nexport const loadMyFilms = createAction(\n  ActionType.LoadMyFilms,\n  (myFilms: Films) => ({\n    payload: myFilms,\n  }),\n);\n\nexport const loadCurrentFilm = createAction(\n  ActionType.LoadCurrentFilm,\n  (currentFilm: Film) => ({\n    payload: currentFilm,\n  }),\n);\n\nexport const loadPromoFilm = createAction(\n  ActionType.LoadPromoFilm,\n  (promoFilm: Film) => ({\n    payload: promoFilm,\n  }),\n);\n\nexport const loadSimilarFilms = createAction(\n  ActionType.LoadSimilarFilms,\n  (similarFilms: Films) => ({\n    payload: similarFilms,\n  }),\n);\n\nexport const loadComments = createAction(\n  ActionType.LoadComments,\n  (comments: Comments) => ({\n    payload: comments,\n  }),\n);\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (authStatus: AuthorizationStatus) => ({\n    payload: authStatus,\n  }),\n);\n\nexport const saveUserAvatarUrl = createAction(\n  ActionType.SaveUserAvatarUrl,\n  (userEmail: string) => ({\n    payload: userEmail,\n  }),\n);\n\nexport const requireLogout = createAction(ActionType.RequireLogout);\n\n","type ShowMoreProps = {\n  onShowMoreClick(): void,\n}\n\nfunction ShowMore(props: ShowMoreProps): JSX.Element {\n  const {onShowMoreClick} = props;\n\n  return (\n    <div className=\"catalog__more\">\n      <button\n        className=\"catalog__button\" type=\"button\"\n        onClick={onShowMoreClick}\n      >\n        Show more\n      </button>\n    </div>\n  );\n}\n\nexport default ShowMore;\n","import {Link} from 'react-router-dom';\n\nfunction Logo(): JSX.Element {\n  return (\n    <Link className=\"logo__link\" to=\"/\">\n      <span className=\"logo__letter logo__letter--1\">W</span>\n      <span className=\"logo__letter logo__letter--2\">T</span>\n      <span className=\"logo__letter logo__letter--3\">W</span>\n    </Link>\n  );\n}\n\nexport default Logo;\n","import {combineReducers} from 'redux';\nimport {filmsData} from './films-data/films-data';\nimport {filmsOtherData} from './films-other-data/films-other-data';\nimport {userData} from './user-data/user-data';\n\nexport enum NameSpace {\n  films = 'FILMS',\n  filmsOther = 'FILMS_OTHER',\n  user = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.films]: filmsData,\n  [NameSpace.filmsOther]: filmsOtherData,\n  [NameSpace.user]: userData,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {FilmsData} from '../../types/state';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {loadFilms, loadCurrentFilm, loadMyFilms, loadSimilarFilms, loadPromoFilm} from '../action';\n\nconst initialState: FilmsData = {\n  films: [],\n  similarFilms: [],\n  myFilms: [],\n  promoFilm: {\n    'id': 0,\n    'name': '',\n    'poster_image': '',\n    'preview_image': '',\n    'background_image': '',\n    'background_color': '',\n    'video_link': '',\n    'preview_video_link': '',\n    'description': '',\n    'rating': 0,\n    'scores_count': 0,\n    'director': '',\n    'starring': [],\n    'run_time': 0,\n    'genre': '',\n    'released': 0,\n    'is_favorite': false,\n  },\n  currentFilm: {\n    'id': 0,\n    'name': '',\n    'poster_image': '',\n    'preview_image': '',\n    'background_image': '',\n    'background_color': '',\n    'video_link': '',\n    'preview_video_link': '',\n    'description': '',\n    'rating': 0,\n    'scores_count': 0,\n    'director': '',\n    'starring': [],\n    'run_time': 0,\n    'genre': '',\n    'released': 0,\n    'is_favorite': false,\n  },\n};\n\nconst filmsData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadFilms, (state, action) => {\n      state.films = action.payload;\n    })\n    .addCase(loadCurrentFilm, (state, action) => {\n      state.currentFilm = action.payload;\n    })\n    .addCase(loadSimilarFilms, (state, action) => {\n      state.similarFilms = action.payload;\n    })\n    .addCase(loadPromoFilm, (state, action) => {\n      state.promoFilm = action.payload;\n    })\n    .addCase(loadMyFilms, (state, action) => {\n      state.myFilms = action.payload;\n    });\n});\n\nexport {filmsData};\n","import {FilmsOtherData} from '../../types/state';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {changeGenre, loadComments} from '../action';\n\nconst initialState: FilmsOtherData = {\n  genre: 'All genres',\n  comments: [],\n};\n\nconst filmsOtherData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeGenre, (state, action) => {\n      state.genre = action.payload;\n    })\n    .addCase(loadComments, (state, action) => {\n      state.comments = action.payload;\n    });\n});\n\nexport {filmsOtherData};\n","import {UserData} from '../../types/state';\nimport {AuthorizationStatus} from '../../const';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {saveUserAvatarUrl, requireAuthorization, requireLogout} from '../action';\n\nconst initialState: UserData = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  isDataLoaded: false,\n  userAvatarUrl: '',\n};\n\nconst userData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(saveUserAvatarUrl, (state, action) => {\n      state.userAvatarUrl = action.payload;\n    })\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload;\n      state.isDataLoaded = true;\n    })\n    .addCase(requireLogout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    });\n});\n\nexport {userData};\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {AuthorizationStatus} from '../../const';\n\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.user].authorizationStatus;\nexport const getIsDataLoaded = (state: State): boolean => state[NameSpace.user].isDataLoaded;\nexport const getUserAvatarUrl = (state: State): string => state[NameSpace.user].userAvatarUrl;\n","import {ThunkActionResult} from '../types/action';\nimport {loadFilms, loadCurrentFilm, loadMyFilms, loadSimilarFilms, loadPromoFilm, saveUserAvatarUrl, loadComments, requireAuthorization, requireLogout} from './action';\nimport {saveToken, dropToken, Token} from '../services/token';\nimport {APIRoute, AuthorizationStatus} from '../const';\nimport {Film} from '../types/film';\nimport {Comment, CommentPost} from '../types/comment';\nimport {AuthData} from '../types/auth-data';\n\ntype postCommentCbType = () => void;\n\n\nexport const fetchFilmsAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(APIRoute.Films);\n    dispatch(loadFilms(data));\n  };\n\nexport const fetchCurrentFilmAction = (movieId: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film>(`${APIRoute.Films}/${movieId}`);\n    dispatch(loadCurrentFilm(data));\n  };\n\nexport const fetchPromoFilmAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film>(APIRoute.Promo);\n    dispatch(loadPromoFilm(data));\n  };\n\nexport const fetchMyFilmsAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(APIRoute.MyFilms);\n    dispatch(loadMyFilms(data));\n  };\n\nexport const postMyFilmAction = (movieId: string, status: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.post<Film>(`${APIRoute.MyFilms}/${movieId}/${status}`);\n    dispatch(loadCurrentFilm(data));\n  };\n\nexport const fetchSimilarFilmsAction = (movieId: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(`${APIRoute.Films}/${movieId}/similar`);\n    dispatch(loadSimilarFilms(data));\n  };\n\nexport const fetchCommentAction = (movieId: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Comment[]>(`${APIRoute.Comments}/${movieId}`);\n    dispatch(loadComments(data));\n  };\n\nexport const postCommentAction = (movieId: string, {rating, comment}: CommentPost, onSuccess: postCommentCbType, onFail: postCommentCbType): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      const {data} = await api.post<Comment[]>(`${APIRoute.Comments}/${movieId}`, {rating, comment});\n      dispatch(loadComments(data));\n      onSuccess();\n    } catch(error) {\n      onFail();\n    }\n  };\n\nexport const checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      const {data: {avatar_url: avatarUrl}} = await api.get(APIRoute.Login);\n      dispatch(saveUserAvatarUrl(avatarUrl));\n      dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    } catch {\n      dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n    }\n  };\n\nexport const loginAction = ({email, password}: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    const {data: {token}} = await api.post<{token: Token}>(APIRoute.Login, {email, password});\n    saveToken(token);\n    dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    const {data: {avatar_url: avatarUrl}} = await api.get(APIRoute.Login);\n    dispatch(saveUserAvatarUrl(avatarUrl));\n  };\n\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(requireLogout());\n  };\n","import {Link} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {useDispatch} from 'react-redux';\nimport {logoutAction} from '../../store/api-actions';\n\ntype AuthorizationProps = {\n  authorizationStatus: string\n}\n\nfunction Authorization({authorizationStatus}: AuthorizationProps): JSX.Element {\n\n  const dispatch = useDispatch();\n\n  return (\n    authorizationStatus === AuthorizationStatus.Auth ?\n      <a\n        className=\"user-block__link\"\n        href=\"/\"\n        onClick={(evt) => {\n          evt.preventDefault();\n          dispatch(logoutAction());\n        }}\n      >\n        Sign Out\n      </a> :\n      <Link className=\"user-block__link\" to={AppRoute.SignIn}>Sign in</Link>\n  );\n}\n\nexport default Authorization;\n","import Logo from '../logo/logo';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus, getUserAvatarUrl} from '../../store/user-data/selectors';\nimport {useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport {fetchMyFilmsAction} from '../../store/api-actions';\nimport {useDispatch} from 'react-redux';\nimport Authorization from '../authorization/authorization';\n\ntype HeaderProps = {\n  isMyList: boolean,\n  isSignIn: boolean,\n  headerTitle: string,\n}\n\nfunction Header({isMyList, isSignIn, headerTitle}: HeaderProps): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const userAvatarUrl = useSelector(getUserAvatarUrl);\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  return (\n    <header className={`page-header ${headerTitle}`}>\n      <div className=\"logo\">\n        <Logo />\n      </div>\n\n      {isMyList ? <h1 className=\"page-title user-page__title\">My list</h1> : ''}\n\n      {isSignIn ? <h1 className=\"page-title user-page__title\">Sign in</h1> : ''}\n\n      {!isSignIn ?\n        <ul className=\"user-block\">\n          <li className=\"user-block__item\">\n            <div\n              className=\"user-block__avatar\"\n              onClick={() => {\n                dispatch(fetchMyFilmsAction());\n                history.push(AppRoute.MyList);\n              }}\n            >\n              <img src={authorizationStatus === AuthorizationStatus.Auth ? userAvatarUrl : 'img/avatar.jpg'} alt=\"User avatar\" width=\"63\" height=\"63\" />\n            </div>\n          </li>\n          <li className=\"user-block__item\">\n            <Authorization authorizationStatus={authorizationStatus}/>\n          </li>\n        </ul> : ''}\n    </header>\n  );\n}\n\nexport default Header;\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {Films, Film} from '../../types/film';\n\nexport const getFilms = (state: State): Films => state[NameSpace.films].films;\nexport const getSimilarFilms = (state: State): Films => state[NameSpace.films].similarFilms;\nexport const getCurrentFilm = (state: State): Film => state[NameSpace.films].currentFilm;\nexport const getPromoFilm = (state: State): Film => state[NameSpace.films].promoFilm;\nexport const getMyFilms = (state: State): Films => state[NameSpace.films].myFilms;\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {Comments} from '../../types/comment';\n\nexport const getGenre = (state: State): string => state[NameSpace.filmsOther].genre;\nexport const getComments = (state: State): Comments => state[NameSpace.filmsOther].comments;\n","import Footer from '../footer/footer';\nimport MovieList from '../movie-list/movie-list';\nimport GenreList from '../genre-list/genre-list';\nimport {useHistory} from 'react-router-dom';\nimport {useEffect, useState} from 'react';\nimport {changeGenre} from '../../store/action';\nimport ShowMore from '../show-more/show-more';\nimport Header from '../header/header';\nimport {getFilms, getPromoFilm} from '../../store/films-data/selectors';\nimport {getGenre} from '../../store/films-other-data/selectors';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {postMyFilmAction, fetchPromoFilmAction, fetchMyFilmsAction} from '../../store/api-actions';\nimport {MouseEvent} from 'react';\n\nfunction Main(): JSX.Element {\n  const films = useSelector(getFilms);\n  const genre = useSelector(getGenre);\n  const promoFilm = useSelector(getPromoFilm);\n\n  const dispatch = useDispatch();\n\n  const [count, setCountData] = useState(8);\n\n  const onUserClick = (genreName: string) => {\n    dispatch(changeGenre(genreName));\n  };\n\n  const onShowMoreClick = () => {\n    setCountData(count + 8);\n  };\n\n  const onClick = (movieId: string, status: number) => {\n    dispatch(postMyFilmAction(movieId, Number(!status)));\n    dispatch(fetchPromoFilmAction());\n    dispatch(fetchMyFilmsAction());\n  };\n\n  const handleClick = (evt: MouseEvent<HTMLElement>) => {\n    evt.preventDefault();\n    onClick(String(promoFilm.id), Number(promoFilm.is_favorite));\n  };\n\n  const history = useHistory();\n  const [filteredFilms, setFilteredFilms] = useState(films);\n\n  useEffect(() => {\n    const isAllGenresTab = genre === 'All genres';\n    const tempFilteredFilms = isAllGenresTab ? [...films] : films.filter((film) => film.genre === genre);\n    if (count < tempFilteredFilms.length) {\n      setFilteredFilms(tempFilteredFilms.slice(0, count));\n    } else {\n      setFilteredFilms(tempFilteredFilms);\n    }\n  }, [genre, count, films]);\n\n  return (\n    <div>\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src=\"img/bg-the-grand-budapest-hotel.jpg\" alt=\"The Grand Budapest Hotel\" />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <Header isMyList={false} isSignIn={false} headerTitle={'film-card__head'}/>\n\n        {!!films.length &&\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={promoFilm.poster_image} alt={promoFilm.name} width=\"218\" height=\"327\" />\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{promoFilm.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{promoFilm.genre}</span>\n                <span className=\"film-card__year\">{promoFilm.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <button\n                  className=\"btn btn--play film-card__button\"\n                  type=\"button\"\n                  onClick={() => history.push(`/player/${promoFilm.id}`)}\n                >\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use href=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </button>\n                <button\n                  className=\"btn btn--list film-card__button\"\n                  type=\"button\"\n                  onClick={handleClick}\n                >\n                  <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                    <use href={`#${promoFilm.is_favorite ? 'in-list' : 'add'}`}></use>\n                  </svg>\n                  <span>My list</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>}\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n          <GenreList films={films} genre={genre} onUserClick={onUserClick}/>\n\n          <MovieList films={filteredFilms} isSimilarFilm={false}/>\n\n          {count <= filteredFilms.length && <ShowMore onShowMoreClick={onShowMoreClick}/>}\n\n        </section>\n\n        <Footer />\n\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { MouseEventHandler } from 'react';\n\ntype ErrorScreenProps = {\n  handleClose: MouseEventHandler<HTMLButtonElement>\n}\n\nfunction ErrorScreen(props: ErrorScreenProps): JSX.Element {\n  const {handleClose} = props;\n  return (\n    <React.Fragment>\n      <h1>Ошибка! Что-то пошло не так.</h1>\n      <button\n        onClick={handleClose}\n      >\n        Закрыть\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default ErrorScreen;\n","import React, {useState, ChangeEvent} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {FormEvent} from 'react';\nimport {CommentPost} from '../../types/comment';\nimport {postCommentAction} from '../../store/api-actions';\nimport {useHistory} from 'react-router-dom';\nimport {getFilms} from '../../store/films-data/selectors';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Header from '../header/header';\nimport ErrorScreen from '../error-screen/error-screen';\n\ntype AddReviewParams = {\n  movieId: string;\n}\n\nfunction AddReview(): JSX.Element {\n  const films = useSelector(getFilms);\n\n  const dispatch = useDispatch();\n\n  const handleErrorScreenClose = () => {\n    setIsErrorShown(false);\n  };\n\n  const onSubmit = (movieId: string, {rating, comment}: CommentPost) => {\n    setDisabledAttributeBtn(true);\n    setDisabledAttributeForm(true);\n    dispatch(postCommentAction(movieId, {rating, comment}, onSuccess, onFail));\n  };\n\n  const getSuccessRoute = () => history.push(`/films/${movieId}`);\n\n  const [isErrorShown, setIsErrorShown] = useState(false);\n\n  const { movieId } = useParams<AddReviewParams>();\n  const film = films.find((item) => item.id === parseInt(movieId, 10));\n\n  const [review, setReview] = useState({'rating': 0, 'comment': ''});\n\n  const [disabledAttributeBtn, setDisabledAttributeBtn] = useState(true);\n\n  const [disabledAttributeForm, setDisabledAttributeForm] = useState(Boolean);\n\n  const history = useHistory();\n\n  const onSuccess = () => {\n    setDisabledAttributeBtn(false);\n    setDisabledAttributeForm(false);\n    setIsErrorShown(false);\n    getSuccessRoute();\n  };\n\n  const onFail = () => {\n    setIsErrorShown(true);\n    setDisabledAttributeBtn(false);\n    setDisabledAttributeForm(false);\n  };\n\n  const ratingHandler = (rating: number) => {\n    setReview((prevState) => ({...prevState, 'rating': rating}));\n    if (review.comment.length < 50 || review.comment.length > 400 || rating === 0) {\n      setDisabledAttributeBtn(true);\n    } else {\n      setDisabledAttributeBtn(false);\n    }\n  };\n\n  const commentHandler = (evt: ChangeEvent<HTMLTextAreaElement>) => {\n    evt.preventDefault();\n    setReview((prevState) => ({...prevState, 'comment': evt.target.value}));\n    if (review.comment.length < 50 || review.comment.length > 400 || review.rating === 0) {\n      setDisabledAttributeBtn(true);\n    } else {\n      setDisabledAttributeBtn(false);\n    }\n  };\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    onSubmit(movieId, {\n      rating: review.rating,\n      comment: review.comment,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {isErrorShown ? <ErrorScreen handleClose={handleErrorScreenClose}/> : ''}\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__header\">\n          <div className=\"film-card__bg\">\n            <img src={film?.background_image} alt={film?.name} />\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <Header isMyList={false} isSignIn={false} headerTitle={'film-card__head'}/>\n\n          <div className=\"film-card__poster film-card__poster--small\">\n            <img src={film?.poster_image} alt={film?.name} width=\"218\" height=\"327\" />\n          </div>\n        </div>\n\n        <div className=\"add-review\">\n          <form\n            action=\"#\"\n            className=\"add-review__form\"\n            onSubmit={handleSubmit}\n          >\n            <div className=\"rating\">\n              <div className=\"rating__stars\">\n                {[10, 9, 8, 7, 6, 5, 4, 3, 2, 1].map((idx) => {\n                  const component = (\n                    <React.Fragment key={idx}>\n                      <input\n                        onClick={() => ratingHandler(idx)}\n                        className=\"rating__input\"\n                        id={`star-${idx}`}\n                        type=\"radio\"\n                        name=\"rating\"\n                        value={idx}\n                        disabled={disabledAttributeForm}\n                      />\n                      <label className=\"rating__label\" htmlFor={`star-${idx}`}>{`Rating ${idx}`}</label>\n                    </React.Fragment>\n                  );\n                  return component;\n                })}\n              </div>\n            </div>\n            <div className=\"add-review__text\">\n              <textarea\n                className=\"add-review__textarea\"\n                name=\"review-text\"\n                id=\"review-text\"\n                placeholder=\"Review text\"\n                onChange={(evt: ChangeEvent<HTMLTextAreaElement>) => commentHandler(evt)}\n                maxLength={400}\n                minLength={50}\n                disabled={disabledAttributeForm}\n              >\n              </textarea>\n              <div className=\"add-review__submit\">\n                <button\n                  className=\"add-review__btn\"\n                  type=\"submit\"\n                  disabled={disabledAttributeBtn}\n                >\n                Post\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default AddReview;\n","import {Film} from '../../types/film';\nimport {Fragment} from 'react';\n\ntype MoviePageOverviewParams = {\n  film: Film | undefined,\n};\n\nfunction MoviePageOverview({film}: MoviePageOverviewParams): JSX.Element {\n  const getLevelComponentByRating = (rating: number | undefined) => {\n    if (rating !== undefined) {\n      if (rating > 0 && rating < 3) {\n        return 'Bad';\n      } else if (rating >= 3 && rating < 5) {\n        return 'Normal';\n      } else if (rating >= 5 && rating < 8) {\n        return 'Good';\n      } else if (rating >= 8 && rating < 10) {\n        return 'Very Good';\n      } else if (rating === 10) {\n        return 'Awesome';\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{film?.rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{getLevelComponentByRating(film?.rating)}</span>\n          <span className=\"film-rating__count\">{film?.scores_count}</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>{film?.description}</p>\n\n        <p className=\"film-card__director\"><strong>Director: {film?.director}</strong></p>\n\n        <p className=\"film-card__starring\"><strong>Starring: {film?.starring.join(', ')}</strong></p>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default MoviePageOverview;\n","import {Film} from '../../types/film';\n\ntype MoviePageDetailsParams = {\n  film: Film | undefined,\n};\n\nfunction MoviePageDetails({film}: MoviePageDetailsParams): JSX.Element {\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{film?.director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\">\n            {film?.starring.join('\\n')}\n          </span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{film?.run_time}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{film?.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{film?.released}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default MoviePageDetails;\n","import {Comments} from '../../types/comment';\n\ntype MoviePageReviewsParams = {\n  comments: Comments,\n};\n\nfunction MoviePageReviews({comments}: MoviePageReviewsParams): JSX.Element {\n  let firstHalfOfComments: Comments = [];\n  let secondHalfOfComments: Comments = [];\n  if (comments.length) {\n    const firstHalfOfCommentsCount = Math.ceil(comments.length / 2);\n    firstHalfOfComments = comments.slice(0, firstHalfOfCommentsCount);\n    secondHalfOfComments = comments.slice(firstHalfOfCommentsCount, comments.length);\n  }\n\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      <div className=\"film-card__reviews-col\">\n        {firstHalfOfComments.map((comment) =>\n          (\n            <div className=\"review\" key={comment.id}>\n              <blockquote className=\"review__quote\">\n                <p className=\"review__text\">{comment.comment}</p>\n\n                <footer className=\"review__details\">\n                  <cite className=\"review__author\">{comment.user.name}</cite>\n                  <time className=\"review__date\" dateTime={new Date(comment.date).toLocaleString('en-US', {day: 'numeric', year: 'numeric', month: 'long'})}>\n                    {new Date(comment.date).toLocaleString('en-US', {day: 'numeric', year: 'numeric', month: 'long'})}\n                  </time>\n                </footer>\n              </blockquote>\n\n              <div className=\"review__rating\">{comment.rating}</div>\n            </div>\n          ),\n        )}\n      </div>\n      <div className=\"film-card__reviews-col\">\n        {secondHalfOfComments.map((comment) =>\n          (\n            <div className=\"review\" key={comment.id}>\n              <blockquote className=\"review__quote\">\n                <p className=\"review__text\">{comment.comment}</p>\n\n                <footer className=\"review__details\">\n                  <cite className=\"review__author\">{comment.user.name}</cite>\n                  <time className=\"review__date\" dateTime=\"2016-12-24\">December 24, 2016</time>\n                </footer>\n              </blockquote>\n\n              <div className=\"review__rating\">{comment.rating}</div>\n            </div>\n          ),\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MoviePageReviews;\n","import Footer from '../footer/footer';\nimport {Film} from '../../types/film';\nimport {useCallback, useState, useEffect} from 'react';\nimport {Link, useParams, useHistory} from 'react-router-dom';\nimport MoviePageOverview from '../movie-page-overview/movie-page-overview';\nimport MoviePageDetails from '../movie-page-details/movie-page-details';\nimport MoviePageReviews from '../movie-page-reviews/movie-page-reviews';\nimport MovieList from '../movie-list/movie-list';\nimport {ThunkAppDispatch} from '../../types/action';\nimport {fetchMyFilmsAction, fetchCommentAction, fetchSimilarFilmsAction,fetchCurrentFilmAction, postMyFilmAction} from '../../store/api-actions';\nimport {store} from '../../index';\nimport {AuthorizationStatus} from '../../const';\nimport Header from '../header/header';\nimport {getCurrentFilm, getSimilarFilms} from '../../store/films-data/selectors';\nimport {getComments} from '../../store/films-other-data/selectors';\nimport {getAuthorizationStatus} from '../../store/user-data/selectors';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {MouseEvent} from 'react';\n\ntype MoviePageParams = {\n  movieId: string;\n};\n\nfunction MoviePage(): JSX.Element {\n  const currentFilm = useSelector(getCurrentFilm);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const comments = useSelector(getComments);\n  const similarFilms = useSelector(getSimilarFilms);\n\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const onFavoriteClick = (movieId: string, status: number) => {\n    dispatch(postMyFilmAction(movieId, status));\n    dispatch(fetchCurrentFilmAction(movieId));\n    dispatch(fetchMyFilmsAction());\n  };\n\n  const { movieId } = useParams<MoviePageParams>();\n\n  const [component, setComponent] = useState<string>('Overview');\n\n  useEffect(() => {\n    (store.dispatch as ThunkAppDispatch)(fetchCommentAction(movieId));\n    (store.dispatch as ThunkAppDispatch)(fetchSimilarFilmsAction(movieId));\n    (store.dispatch as ThunkAppDispatch)(fetchCurrentFilmAction(movieId));\n  }, [movieId]);\n\n  const handleClick = (evt: MouseEvent<HTMLElement>) => {\n    evt.preventDefault();\n    currentFilm.is_favorite ? onFavoriteClick(movieId, 0) : onFavoriteClick(movieId, 1);\n  };\n\n  const getComponentByType = (type: string | null, filmData: Film | undefined) => {\n    switch (type) {\n      case 'Overview':\n        return <MoviePageOverview film={filmData}/>;\n      case 'Details':\n        return <MoviePageDetails film={filmData}/>;\n      case 'Reviews':\n        return <MoviePageReviews comments={comments}/>;\n    }\n  };\n\n  const onTabClick = useCallback((evt) => {\n    evt.preventDefault();\n    setComponent(evt.currentTarget.innerText);\n  },[]);\n\n  return (\n    <div>\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={currentFilm.background_image} alt={currentFilm.name} />\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <Header isMyList={false} isSignIn={false} headerTitle={'film-card__head'}/>\n\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{currentFilm.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{currentFilm.genre}</span>\n                <span className=\"film-card__year\">{currentFilm.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <button\n                  className=\"btn btn--play film-card__button\"\n                  type=\"button\"\n                  onClick={() => history.push(`/player/${currentFilm.id}`)}\n                >\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use href=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </button>\n                <button\n                  className=\"btn btn--list film-card__button\"\n                  type=\"button\"\n                  onClick={handleClick}\n                >\n                  <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                    <use href={`#${currentFilm.is_favorite ? 'in-list' : 'add'}`}></use>\n                  </svg>\n                  <span>My list</span>\n                </button>\n                {authorizationStatus === AuthorizationStatus.Auth ? <Link className=\"btn film-card__button\" to={`/films/${currentFilm.id}/review`}>Add review</Link> : ''}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img src={currentFilm.poster_image} alt={currentFilm.name} width=\"218\" height=\"327\" />\n            </div>\n            <div className=\"film-card__desc\">\n              <nav className=\"film-nav film-card__nav\">\n                <ul className=\"film-nav__list\">\n                  <li className={`film-nav__item${component === 'Overview' || null ? ' film-nav__item--active' : ''}`}>\n                    <a\n                      href=\"/\"\n                      className=\"film-nav__link\"\n                      onClick={onTabClick}\n                    >Overview\n                    </a>\n                  </li>\n                  <li className={`film-nav__item${component === 'Details' ? ' film-nav__item--active' : ''}`}>\n                    <a\n                      href=\"/\"\n                      className=\"film-nav__link\"\n                      onClick={onTabClick}\n                    >Details\n                    </a>\n                  </li>\n                  <li className={`film-nav__item${component === 'Reviews' ? ' film-nav__item--active' : ''}`}>\n                    <a\n                      href=\"/\"\n                      className=\"film-nav__link\"\n                      onClick={onTabClick}\n                    >Reviews\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n              {getComponentByType(component, currentFilm)}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          <h2 className=\"catalog__title\">More like this</h2>\n\n          <MovieList films={similarFilms} isSimilarFilm/>\n\n        </section>\n\n        <Footer />\n\n      </div>\n    </div>\n  );\n}\n\nexport default MoviePage;\n","import Footer from '../footer/footer';\nimport {getMyFilms} from '../../store/films-data/selectors';\nimport {useSelector} from 'react-redux';\nimport MovieCard from '../movie-card/movie-card';\nimport Header from '../header/header';\n\nfunction MyList(): JSX.Element {\n  const myFilms = useSelector(getMyFilms);\n\n  return (\n    <div className=\"user-page\">\n\n      <Header isMyList isSignIn={false} headerTitle={'user-page__head'}/>\n\n      <section className=\"catalog\">\n        <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n        <div className=\"catalog__films-list\">\n          {myFilms.map((film) => <MovieCard film={film} key={film.id} isSimilarFilm={false}/>)}\n        </div>\n      </section>\n\n      <Footer />\n\n    </div>\n  );\n}\n\n\nexport default MyList;\n\n","function LoadingScreen(): JSX.Element {\n  return (\n    <p>Loading ...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import {useParams} from 'react-router-dom';\nimport {useHistory} from 'react-router-dom';\nimport {getFilms} from '../../store/films-data/selectors';\nimport {useSelector} from 'react-redux';\nimport {useRef, useCallback, useState, useEffect} from 'react';\nimport LoadingScreen from '../loading-screen/loading-screen';\n\ntype PlayerParams = {\n  movieId: string;\n}\n\nfunction Player(): JSX.Element {\n  const films = useSelector(getFilms);\n\n  const { movieId } = useParams<PlayerParams>();\n  const film = films.find((item) => item.id === parseInt(movieId, 10));\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  const history = useHistory();\n\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  const [durationTime, setDuration] = useState<string>('00:00');\n\n  const [progressBar, setProgressBar] = useState('0');\n\n  const [isComponentDownLoaded, setIsComponentDownLoaded] = useState(Boolean);\n\n  const convertSecondsToTime = (seconds: number, currentSeconds: number) => {\n    const date = new Date(0, 0, 0, 0, 0, seconds - currentSeconds);\n    const convertedHours = date.getHours();\n    const convertedMinutes = date.getMinutes();\n    const convertedSeconds = date.getSeconds();\n\n    const result = convertedHours > 0 ? [convertedHours, convertedMinutes, convertedSeconds] : [convertedMinutes, convertedSeconds];\n    const resultWithZeroPad = result.map((timeMember) => timeMember < 10 ? `0${timeMember}` : `${timeMember}`);\n    return resultWithZeroPad.join(':');\n  };\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      video.onloadeddata = () => {\n        const duration = convertSecondsToTime(video.duration, 0);\n        setDuration(duration);\n        setIsComponentDownLoaded(false);\n      };\n      video.ontimeupdate = () => {\n        const duration = convertSecondsToTime(video.duration, video.currentTime);\n        setDuration(duration);\n        if (video.currentTime !== 0) {\n          const progressValue = video.currentTime / video.duration * 100;\n          setProgressBar(String(progressValue));\n        }\n      };\n    }\n    return () => {\n      if (video) {\n        video.ontimeupdate = null;\n      }\n    };\n  }, [videoRef]);\n\n  const handlePausedChange = useCallback((evt) => {\n    evt.preventDefault();\n    if (videoRef.current && videoRef.current.paused) {\n      videoRef.current.play();\n    } else if (videoRef.current && !videoRef.current.paused) {\n      videoRef.current.pause();\n    }\n  },[]);\n\n  const handleFullScreenClick = () => {\n    videoRef.current?.requestFullscreen();\n  };\n\n  return !isComponentDownLoaded ? (\n    <div className=\"player\">\n      <video\n        src={film?.video_link}\n        className=\"player__video\"\n        poster={film?.preview_image}\n        ref={videoRef}\n        onPlay={() => videoRef.current ? setIsPlaying(videoRef.current.paused) : ''}\n        onPause={() => videoRef.current ? setIsPlaying(videoRef.current.paused) : ''}\n      >\n      </video>\n\n      <button\n        type=\"button\"\n        className=\"player__exit\"\n        onClick={() => history.push(`/films/${film?.id}`)}\n      >\n      Exit\n      </button>\n\n      <div className=\"player__controls\">\n        <div className=\"player__controls-row\">\n          <div className=\"player__time\">\n            <progress className=\"player__progress\" value={progressBar} max=\"100\"></progress>\n            <div className=\"player__toggler\" style={{left: `${progressBar}%`}}>Toggler</div>\n          </div>\n          <div className=\"player__time-value\">{`-${durationTime}`}</div>\n        </div>\n\n        <div className=\"player__controls-row\">\n          <button\n            type=\"button\"\n            className=\"player__play\"\n            onClick={handlePausedChange}\n          >\n            <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n              <use href={`#${isPlaying ? 'play-s' : 'pause'}`}></use>;\n            </svg>\n            <span>Play</span>\n          </button>\n          <div className=\"player__name\">Transpotting</div>\n\n          <button\n            type=\"button\"\n            className=\"player__full-screen\"\n            onClick={handleFullScreenClick}\n          >\n            <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n              <use href=\"#full-screen\"></use>\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : <LoadingScreen />;\n}\n\nexport default Player;\n","import Footer from '../footer/footer';\nimport {AuthData} from '../../types/auth-data';\nimport {loginAction} from '../../store/api-actions';\nimport {useRef, FormEvent} from 'react';\nimport {AppRoute} from '../../const';\nimport {useHistory} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport Header from '../header/header';\n\nfunction SignIn(): JSX.Element {\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (authData: AuthData) => {\n    dispatch(loginAction(authData));\n  };\n\n  const history = useHistory();\n\n  const emailRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (passwordRef.current && emailRef.current) {\n      if (!re.test(passwordRef.current.value)) {\n        passwordRef.current.setCustomValidity('Пароль должен состоять минимум из одной буквы и цифры.');\n        passwordRef.current.reportValidity();\n      } else {\n        onSubmit({\n          email: emailRef.current.value,\n          password: passwordRef.current.value,\n        });\n        history.push(AppRoute.Root);\n      }\n    }\n  };\n\n  const re = /[0-9]{1,}[a-zA-Z]{1,}|[a-zA-Z]{1,}[0-9]{1,}/;\n\n  return (\n    <div className=\"user-page\">\n\n      <Header isMyList={false} isSignIn headerTitle={'user-page__head'}/>\n\n      <div className=\"sign-in user-page__content\">\n        <form\n          action=\"#\"\n          className=\"sign-in__form\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"sign-in__fields\">\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"email\"\n                placeholder=\"Email address\"\n                name=\"user-email\"\n                id=\"user-email\"\n                ref={emailRef}\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n            </div>\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"user-password\"\n                id=\"user-password\"\n                ref={passwordRef}\n                onChange={(evt) => {\n                  if (re.test(evt.target.value)) {\n                    evt.target.setCustomValidity('');\n                    evt.target.reportValidity();\n                  }\n                }}\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n            </div>\n          </div>\n          <div className=\"sign-in__submit\">\n            <button\n              className=\"sign-in__btn\"\n              type=\"submit\"\n            >Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default SignIn;\n","import {Link} from 'react-router-dom';\n\nfunction NotFoundScreen(): JSX.Element {\n  return (\n    <section className=\"game__screen\">\n      <h1>404. Page not found</h1>\n      <Link to=\"/\">Вернуться на главную</Link>\n    </section>\n  );\n}\n\nexport default NotFoundScreen;\n","import {Route, Redirect} from 'react-router-dom';\nimport {RouteProps} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user-data/selectors';\nimport {useSelector} from 'react-redux';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const {exact, path, render} = props;\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render()\n          : <Redirect to={AppRoute.SignIn} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {Switch, Route, BrowserRouter} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport Main from '../main/main';\nimport AddReview from '../add-review/add-review';\nimport MoviePage from '../movie-page/movie-page';\nimport MyList from '../my-list/my-list';\nimport Player from '../player/player';\nimport SignIn from '../sign-in/sign-in';\nimport NotFoundScreen from '../not-found-screen/not-found-screen';\nimport PrivateRoute from '../private-route/private-route';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {getAuthorizationStatus, getIsDataLoaded} from '../../store/user-data/selectors';\nimport {useSelector} from 'react-redux';\n\nconst isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n\nfunction App(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const isDataLoaded = useSelector(getIsDataLoaded);\n\n  if (isCheckedAuth(authorizationStatus) || !isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={AppRoute.Root} component={Main}/>\n        <PrivateRoute\n          exact\n          path={AppRoute.MyList}\n          render={() => <MyList />}\n        >\n        </PrivateRoute>\n        <PrivateRoute\n          exact\n          path={AppRoute.AddReview}\n          render={() => <AddReview />}\n        >\n        </PrivateRoute>\n        <Route exact path={AppRoute.MoviePage} component={MoviePage}/>\n        <Route exact path={AppRoute.Player} component={Player}/>\n        <Route exact path={AppRoute.SignIn} component={SignIn}/>\n        <Route>\n          <NotFoundScreen />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createAPI} from './services/api';\nimport {Provider} from 'react-redux';\nimport {configureStore} from '@reduxjs/toolkit';\nimport App from './components/app/app';\nimport {rootReducer} from './store/root-reducer';\nimport {requireAuthorization} from './store/action';\nimport {fetchFilmsAction, fetchPromoFilmAction, checkAuthAction} from './store/api-actions';\nimport {AuthorizationStatus} from './const';\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)),\n);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }),\n});\n\nstore.dispatch(checkAuthAction());\nstore.dispatch(fetchFilmsAction());\nstore.dispatch(fetchPromoFilmAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}