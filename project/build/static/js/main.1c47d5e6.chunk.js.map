{"version":3,"sources":["services/api.ts","services/token.ts","const.ts","components/footer/footer.tsx","components/preview-player/preview-player.tsx","components/movie-card/movie-card.tsx","components/movie-list/movie-list.tsx","components/genre-list/genre-list.tsx","types/action.ts","store/action.ts","components/show-more/show-more.tsx","components/logo/logo.tsx","store/root-reducer.ts","store/films-data/films-data.ts","store/films-other-data/films-other-data.ts","store/user-data/user-data.ts","store/user-data/selectors.ts","store/api-actions.ts","components/authorization-status/authorization-status.tsx","components/header/header.tsx","store/films-data/selectors.ts","store/films-other-data/selectors.ts","components/main/main.tsx","components/add-review/add-review.tsx","components/movie-page-overview/movie-page-overview.tsx","components/movie-page-details/movie-page-details.tsx","components/movie-page-reviews/movie-page-reviews.tsx","components/movie-page/movie-page.tsx","components/my-list/my-list.tsx","components/player/player.tsx","components/sign-in/sign-in.tsx","components/not-found-screen/not-found-screen.tsx","components/private-route/private-route.tsx","components/loading-screen/loading-screen.tsx","components/app/app.tsx","index.tsx"],"names":["HttpCode","AUTH_TOKEN_KEY_NAME","saveToken","token","localStorage","setItem","AppRoute","AuthorizationStatus","APIRoute","Footer","className","to","PreviewPlayer","film","width","height","autoPlay","muted","src","preview_video_link","type","MovieCard","timeOutId","useState","Boolean","isActive","setIsActive","removeIsActive","clearTimeout","onMouseOver","setTimeout","onMouseOut","preview_image","alt","name","id","onClick","MovieList","films","map","GenreList","ActionType","props","genre","onUserClick","filmsGenres","uniqeFilmsGenres","Set","onUserClickWrapper","evt","preventDefault","target","textContent","href","currentGenre","changeGenre","createAction","ChangeGenre","genreName","payload","loadFilms","LoadFilms","loadMyFilms","LoadMyFilms","myFilms","loadCurrentFilm","LoadCurrentFilm","currentFilm","loadPromoFilm","LoadPromoFilm","promoFilm","loadSimilarFilms","LoadSimilarFilms","similarFilms","loadComments","LoadComments","comments","showMoreFilms","ShowMoreFilms","requireAuthorization","RequireAuthorization","authStatus","saveUserAvatarUrl","SaveUserAvatarUrl","userEmail","requireLogout","RequireLogout","ShowMore","onShowMoreClick","Logo","NameSpace","filmsData","createReducer","builder","addCase","state","action","initialState","count","filmsOtherData","authorizationStatus","Unknown","isDataLoaded","userAvatarUrl","userData","NoAuth","rootReducer","combineReducers","filmsOther","user","getAuthorizationStatus","getIsDataLoaded","getUserAvatarUrl","fetchCurrentFilmAction","movieId","dispatch","_getState","api","a","get","Films","data","fetchPromoFilmAction","Promo","fetchMyFilmsAction","MyFilms","postMyFilmAction","status","post","Authorization","useDispatch","Auth","delete","Logout","removeItem","SignIn","Header","useSelector","history","useHistory","push","MyList","getFilms","getSimilarFilms","getCurrentFilm","getPromoFilm","getMyFilms","getGenre","getComments","getCount","Main","filteredFilms","setFilteredFilms","useEffect","tempFilteredFilms","filter","length","slice","poster_image","released","viewBox","String","Number","is_favorite","AddReview","onSubmit","rating","comment","Comments","postCommentAction","useParams","find","item","parseInt","review","setReview","background_image","MoviePage","idx","Fragment","prevState","value","htmlFor","placeholder","onChange","commentHandler","MoviePageOverview","scores_count","description","director","starring","join","MoviePageDetails","run_time","MoviePageReviews","firstHalfOfComments","secondHalfOfComments","firstHalfOfCommentsCount","Math","ceil","dateTime","onFavoriteClick","component","setComponent","store","fetchCommentAction","fetchSimilarFilmsAction","onTabClick","useCallback","currentTarget","innerText","filmData","getComponentByType","Player","videoRef","useRef","isPlaying","setIsPlaying","durationTime","setDuration","progressBar","setProgressBar","spinnerComponent","setSpinnerComponent","convertSecondsToTime","seconds","currentSeconds","date","Date","convertedHours","getHours","convertedMinutes","getMinutes","convertedSeconds","getSeconds","timeMember","video","current","onloadeddata","duration","ontimeupdate","currentTime","progressValue","handlePausedChange","paused","play","pause","console","log","video_link","poster","ref","onPlay","onPause","onWaiting","max","style","left","requestFullscreen","authData","email","password","Login","avatar_url","loginAction","emailRef","passwordRef","Root","NotFoundScreen","PrivateRoute","exact","path","render","LoadingScreen","App","isCheckedAuth","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","error","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","createAPI","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c47d5e6.chunk.js","sourcesContent":["import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosError} from 'axios';\nimport {getToken} from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nenum HttpCode {\n  Unauthorized = 401,\n}\n\ntype UnauthorizedCallback = () => void;\n\nexport const createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n","const AUTH_TOKEN_KEY_NAME = 'T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","export enum AppRoute {\n  Root = '/',\n  MyList = '/my-list',\n  MoviePage = '/movie-page/:movieId',\n  AddReview = '/add-review/:movieId',\n  Player = '/player/:movieId',\n  SignIn = '/sign-in'\n}\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum APIRoute {\n  Films = '/films',\n  Comments = '/comments',\n  MyFilms = '/favorite',\n  Promo = '/promo',\n  Login = '/login',\n  Logout = '/logout',\n}\n","import {Link} from 'react-router-dom';\n\nfunction Footer(): JSX.Element {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"logo\">\n        <Link className=\"logo__link logo__link--light\" to=\"/\">\n          <span className=\"logo__letter logo__letter--1\">W</span>\n          <span className=\"logo__letter logo__letter--2\">T</span>\n          <span className=\"logo__letter logo__letter--3\">W</span>\n        </Link>\n      </div>\n\n      <div className=\"copyright\">\n        <p>© 2019 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import {Film} from '../../types/film';\n\ntype PreviewPlayerProps = {\n  film: Film,\n}\n\nfunction PreviewPlayer({film}: PreviewPlayerProps): JSX.Element {\n  return (\n    <video width=\"280\" height=\"175\" autoPlay muted>\n      <source src={film.preview_video_link} type='video/webm; codecs=\"vp8, vorbis\"'></source>\n      <source src={film.preview_video_link} type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'></source>\n    </video>\n  );\n}\n\nexport default PreviewPlayer;\n","import {useState} from 'react';\nimport {Film} from '../../types/film';\nimport {Link} from 'react-router-dom';\nimport PreviewPlayer from '../preview-player/preview-player';\n\ntype MovieCardProps = {\n  film: Film\n}\n\nfunction MovieCard({film}: MovieCardProps): JSX.Element {\n  const [isActive, setIsActive] = useState(Boolean);\n  let timeOutId: ReturnType<typeof setTimeout>;\n\n  function setIsActiveDelayed() {\n    timeOutId = setTimeout(() => setIsActive(true), 1000);\n  }\n\n  function removeIsActive() {\n    clearTimeout(timeOutId);\n    setIsActive(false);\n  }\n\n  return (\n    <article\n      onMouseOver={setIsActiveDelayed}\n      onMouseOut={removeIsActive}\n      className=\"small-film-card catalog__films-card\"\n    >\n      <div className=\"small-film-card__image\">\n        {isActive\n          ? <PreviewPlayer film={film}/>\n          : <img src={film.preview_image} alt={film.name} width=\"280\" height=\"175\" />}\n      </div>\n      <h3 className=\"small-film-card__title\">\n        <Link className=\"small-film-card__link\" to={`/movie-page/${film.id}`} onClick={removeIsActive}>{film.name}</Link>\n      </h3>\n    </article>\n  );\n}\n\nexport default MovieCard;\n","import {Films} from '../../types/film';\nimport MovieCard from '../movie-card/movie-card';\n\ntype MovieListProps = {\n  films: Films\n}\n\nfunction MovieList({films}: MovieListProps): JSX.Element {\n\n  return (\n    <div className=\"catalog__films-list\">\n      {films.map((film) => <MovieCard film={film} key={film.id} />)}\n    </div>\n  );\n}\n\nexport default MovieList;\n","import {Films} from '../../types/film';\nimport { MouseEvent } from 'react';\n\ntype GenreListProps = {\n  onUserClick(genreName: string | null): void,\n  films: Films,\n  genre: string,\n}\n\nfunction GenreList(props: GenreListProps): JSX.Element {\n  const {films, genre, onUserClick} = props;\n\n  const filmsGenres = films.map((film) => film.genre);\n\n  const uniqeFilmsGenres = [...new Set(filmsGenres)];\n\n  function onUserClickWrapper(evt: MouseEvent<HTMLLIElement>): void {\n    evt.preventDefault();\n    onUserClick((evt.target as HTMLLIElement).textContent);\n  }\n\n  return (\n    <ul className=\"catalog__genres-list\">\n      <li\n        className={`catalog__genres-item ${genre === 'All genres' ? 'catalog__genres-item--active' : ''}`}\n        onClick={onUserClickWrapper}\n      >\n        <a href=\"/\" className=\"catalog__genres-link\">All genres</a>\n      </li>\n      {uniqeFilmsGenres.map((currentGenre) =>\n        (\n          <li\n            className={`catalog__genres-item ${currentGenre === genre ? 'catalog__genres-item--active' : ''}`}\n            key={currentGenre}\n            onClick={onUserClickWrapper}\n          >\n            <a href=\"/\" className=\"catalog__genres-link\">{currentGenre}</a>\n          </li>\n        ),\n      )}\n    </ul>\n  );\n}\n\nexport default GenreList;\n","import {Action} from 'redux';\nimport {\n  ThunkAction,\n  ThunkDispatch\n} from 'redux-thunk';\nimport {\n  AxiosInstance\n} from 'axios';\nimport {State} from '../types/state';\n\nexport enum ActionType {\n  ChangeGenre = 'films/changeGenre',\n  LoadFilms = 'films/loadFilms',\n  LoadCurrentFilm = 'films/loadCurrentFilm',\n  LoadPromoFilm = 'films/loadPromoFilm',\n  LoadSimilarFilms = 'films/loadSimilarFilms',\n  LoadMyFilms = 'films/loadMyFilms',\n  LoadComments = 'comments/loadComments',\n  ShowMoreFilms = 'data/showMoreFilms',\n  RequireAuthorization = 'user/requireAuthorization',\n  RequireLogout = 'user/requireLogout',\n  UserAuthorization = 'user/userAuthorization',\n  SaveUserAvatarUrl = 'user/saveUserAvatarUrl',\n}\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Action>;\n\nexport type ThunkAppDispatch = ThunkDispatch<State, AxiosInstance, Action>;\n","import {ActionType} from '../types/action';\nimport {Films, Film} from '../types/film';\nimport {Comments} from '../types/comment';\nimport {AuthorizationStatus} from '../const';\nimport {createAction} from '@reduxjs/toolkit';\n\nexport const changeGenre = createAction(\n  ActionType.ChangeGenre,\n  (genreName: string) => ({\n    payload: genreName,\n  }),\n);\n\nexport const loadFilms = createAction(\n  ActionType.LoadFilms,\n  (films: Films) => ({\n    payload: films,\n  }),\n);\n\nexport const loadMyFilms = createAction(\n  ActionType.LoadMyFilms,\n  (myFilms: Films) => ({\n    payload: myFilms,\n  }),\n);\n\nexport const loadCurrentFilm = createAction(\n  ActionType.LoadCurrentFilm,\n  (currentFilm: Film) => ({\n    payload: currentFilm,\n  }),\n);\n\nexport const loadPromoFilm = createAction(\n  ActionType.LoadPromoFilm,\n  (promoFilm: Film) => ({\n    payload: promoFilm,\n  }),\n);\n\nexport const loadSimilarFilms = createAction(\n  ActionType.LoadSimilarFilms,\n  (similarFilms: Films) => ({\n    payload: similarFilms,\n  }),\n);\n\nexport const loadComments = createAction(\n  ActionType.LoadComments,\n  (comments: Comments) => ({\n    payload: comments,\n  }),\n);\n\nexport const showMoreFilms = createAction(ActionType.ShowMoreFilms);\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (authStatus: AuthorizationStatus) => ({\n    payload: authStatus,\n  }),\n);\n\nexport const saveUserAvatarUrl = createAction(\n  ActionType.SaveUserAvatarUrl,\n  (userEmail: string) => ({\n    payload: userEmail,\n  }),\n);\n\nexport const requireLogout = createAction(ActionType.RequireLogout);\n\n","type ShowMoreProps = {\n  onShowMoreClick(): void,\n}\n\nfunction ShowMore(props: ShowMoreProps): JSX.Element {\n  const {onShowMoreClick} = props;\n\n  return (\n    <div className=\"catalog__more\">\n      <button\n        className=\"catalog__button\" type=\"button\"\n        onClick={onShowMoreClick}\n      >\n        Show more\n      </button>\n    </div>\n  );\n}\n\nexport default ShowMore;\n","import {Link} from 'react-router-dom';\n\nfunction Logo(): JSX.Element {\n  return (\n    <Link className=\"logo__link\" to=\"/\">\n      <span className=\"logo__letter logo__letter--1\">W</span>\n      <span className=\"logo__letter logo__letter--2\">T</span>\n      <span className=\"logo__letter logo__letter--3\">W</span>\n    </Link>\n  );\n}\n\nexport default Logo;\n","import {combineReducers} from 'redux';\nimport {filmsData} from './films-data/films-data';\nimport {filmsOtherData} from './films-other-data/films-other-data';\nimport {userData} from './user-data/user-data';\n\nexport enum NameSpace {\n  films = 'FILMS',\n  filmsOther = 'FILMS_OTHER',\n  user = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.films]: filmsData,\n  [NameSpace.filmsOther]: filmsOtherData,\n  [NameSpace.user]: userData,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {FilmsData} from '../../types/state';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {loadFilms, loadCurrentFilm, loadMyFilms, loadSimilarFilms, loadPromoFilm} from '../action';\n\nconst initialState: FilmsData = {\n  films: [],\n  similarFilms: [],\n  myFilms: [],\n  promoFilm: {\n    'id': 0,\n    'name': '',\n    'poster_image': '',\n    'preview_image': '',\n    'background_image': '',\n    'background_color': '',\n    'video_link': '',\n    'preview_video_link': '',\n    'description': '',\n    'rating': 0,\n    'scores_count': 0,\n    'director': '',\n    'starring': [],\n    'run_time': 0,\n    'genre': '',\n    'released': 0,\n    'is_favorite': false,\n  },\n  currentFilm: {\n    'id': 0,\n    'name': '',\n    'poster_image': '',\n    'preview_image': '',\n    'background_image': '',\n    'background_color': '',\n    'video_link': '',\n    'preview_video_link': '',\n    'description': '',\n    'rating': 0,\n    'scores_count': 0,\n    'director': '',\n    'starring': [],\n    'run_time': 0,\n    'genre': '',\n    'released': 0,\n    'is_favorite': false,\n  },\n};\n\nconst filmsData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadFilms, (state, action) => {\n      state.films = action.payload;\n    })\n    .addCase(loadCurrentFilm, (state, action) => {\n      state.currentFilm = action.payload;\n    })\n    .addCase(loadSimilarFilms, (state, action) => {\n      state.similarFilms = action.payload;\n    })\n    .addCase(loadPromoFilm, (state, action) => {\n      state.promoFilm = action.payload;\n    })\n    .addCase(loadMyFilms, (state, action) => {\n      state.myFilms = action.payload;\n    });\n});\n\nexport {filmsData};\n","import {FilmsOtherData} from '../../types/state';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {changeGenre, loadComments, showMoreFilms} from '../action';\n\nconst FILMS_IN_LIST_STEP = 8;\n\nconst initialState: FilmsOtherData = {\n  genre: 'All genres',\n  comments: [],\n  count: FILMS_IN_LIST_STEP,\n};\n\nconst filmsOtherData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeGenre, (state, action) => {\n      state.genre = action.payload;\n    })\n    .addCase(loadComments, (state, action) => {\n      state.comments = action.payload;\n    })\n    .addCase(showMoreFilms, (state) => {\n      state.count += 8;\n    });\n});\n\nexport {filmsOtherData};\n","import {UserData} from '../../types/state';\nimport {AuthorizationStatus} from '../../const';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {saveUserAvatarUrl, requireAuthorization, requireLogout} from '../action';\n\nconst initialState: UserData = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  isDataLoaded: false,\n  userAvatarUrl: '',\n};\n\nconst userData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(saveUserAvatarUrl, (state, action) => {\n      state.userAvatarUrl = action.payload;\n    })\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload;\n      state.isDataLoaded = true;\n    })\n    .addCase(requireLogout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    });\n});\n\nexport {userData};\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {AuthorizationStatus} from '../../const';\n\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.user].authorizationStatus;\nexport const getIsDataLoaded = (state: State): boolean => state[NameSpace.user].isDataLoaded;\nexport const getUserAvatarUrl = (state: State): string => state[NameSpace.user].userAvatarUrl;\n","import {ThunkActionResult} from '../types/action';\nimport {loadFilms, loadCurrentFilm, loadMyFilms, loadSimilarFilms, loadPromoFilm, saveUserAvatarUrl, loadComments, requireAuthorization, requireLogout} from './action';\nimport {saveToken, dropToken, Token} from '../services/token';\nimport {APIRoute, AuthorizationStatus} from '../const';\nimport {Film} from '../types/film';\nimport {Comment, CommentPost} from '../types/comment';\nimport {AuthData} from '../types/auth-data';\n\nexport const fetchFilmsAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(APIRoute.Films);\n    dispatch(loadFilms(data));\n  };\n\nexport const fetchCurrentFilmAction = (movieId: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film>(`${APIRoute.Films}/${movieId}`);\n    dispatch(loadCurrentFilm(data));\n  };\n\nexport const fetchPromoFilmAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film>(APIRoute.Promo);\n    dispatch(loadPromoFilm(data));\n  };\n\nexport const fetchMyFilmsAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(APIRoute.MyFilms);\n    dispatch(loadMyFilms(data));\n  };\n\nexport const postMyFilmAction = (movieId: string, status: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.post<Film>(`${APIRoute.MyFilms}/${movieId}/${status}`);\n    dispatch(loadCurrentFilm(data));\n  };\n\nexport const fetchSimilarFilmsAction = (movieId: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(`${APIRoute.Films}/${movieId}/similar`);\n    dispatch(loadSimilarFilms(data));\n  };\n\nexport const fetchCommentAction = (movieId: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Comment[]>(`${APIRoute.Comments}/${movieId}`);\n    dispatch(loadComments(data));\n  };\n\nexport const postCommentAction = (movieId: string, {rating, comment}: CommentPost): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    const {data} = await api.post<Comment[]>(`${APIRoute.Comments}/${movieId}`, {rating, comment});\n    dispatch(loadComments(data));\n  };\n\nexport const checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      const {data: {avatar_url}} = await api.get(APIRoute.Login);\n      dispatch(saveUserAvatarUrl(avatar_url));\n      dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    } catch {\n      dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n    }\n  };\n\nexport const loginAction = ({email, password}: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    const {data: {token}} = await api.post<{token: Token}>(APIRoute.Login, {email, password});\n    saveToken(token);\n    dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    const {data: {avatar_url}} = await api.get(APIRoute.Login);\n    dispatch(saveUserAvatarUrl(avatar_url));\n  };\n\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(requireLogout());\n  };\n","import {Link} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {useDispatch} from 'react-redux';\nimport {logoutAction} from '../../store/api-actions';\n\ntype AuthorizationProps = {\n  authorizationStatus: string\n}\n\nfunction Authorization({authorizationStatus}: AuthorizationProps): JSX.Element {\n\n  const dispatch = useDispatch();\n\n  return (\n    authorizationStatus === AuthorizationStatus.Auth ?\n      <a\n        className=\"user-block__link\"\n        href=\"/\"\n        onClick={(evt) => {\n          evt.preventDefault();\n          dispatch(logoutAction());\n        }}\n      >\n        Sign Out\n      </a> :\n      <Link className=\"user-block__link\" to={AppRoute.SignIn}>Sign in</Link>\n  )\n}\n\nexport default Authorization;\n","import Logo from '../logo/logo';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus, getUserAvatarUrl} from '../../store/user-data/selectors';\nimport {useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport {fetchMyFilmsAction} from '../../store/api-actions';\nimport {useDispatch} from 'react-redux';\nimport Authorization from '../authorization-status/authorization-status'\n\nfunction Header(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const userAvatarUrl = useSelector(getUserAvatarUrl);\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  return (\n    <header className=\"page-header film-card__head\">\n      <div className=\"logo\">\n        <Logo />\n      </div>\n\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n          <div\n            className=\"user-block__avatar\"\n            onClick={() => {\n              dispatch(fetchMyFilmsAction());\n              history.push(AppRoute.MyList);\n            }}\n          >\n            <img src={authorizationStatus === AuthorizationStatus.Auth ? userAvatarUrl : 'img/avatar.jpg'} alt=\"User avatar\" width=\"63\" height=\"63\" />\n          </div>\n        </li>\n        <li className=\"user-block__item\">\n          <Authorization authorizationStatus={authorizationStatus}/>\n        </li>\n      </ul>\n    </header>\n  );\n}\n\nexport default Header;\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {Films, Film} from '../../types/film';\n\nexport const getFilms = (state: State): Films => state[NameSpace.films].films;\nexport const getSimilarFilms = (state: State): Films => state[NameSpace.films].similarFilms;\nexport const getCurrentFilm = (state: State): Film => state[NameSpace.films].currentFilm;\nexport const getPromoFilm = (state: State): Film => state[NameSpace.films].promoFilm;\nexport const getMyFilms = (state: State): Films => state[NameSpace.films].myFilms;\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {Comments} from '../../types/comment';\n\nexport const getGenre = (state: State): string => state[NameSpace.filmsOther].genre;\nexport const getComments = (state: State): Comments => state[NameSpace.filmsOther].comments;\nexport const getCount = (state: State): number => state[NameSpace.filmsOther].count;\n","import Footer from '../footer/footer';\nimport MovieList from '../movie-list/movie-list';\nimport GenreList from '../genre-list/genre-list';\nimport {useHistory} from 'react-router-dom';\nimport {useEffect, useState} from 'react';\nimport {changeGenre, showMoreFilms} from '../../store/action';\nimport ShowMore from '../show-more/show-more';\nimport Header from '../header/header';\nimport {getFilms, getPromoFilm} from '../../store/films-data/selectors';\nimport {getGenre, getCount} from '../../store/films-other-data/selectors';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {postMyFilmAction, fetchPromoFilmAction, fetchMyFilmsAction} from '../../store/api-actions';\nimport {MouseEvent} from 'react';\n\nfunction Main(): JSX.Element {\n  const films = useSelector(getFilms);\n  const genre = useSelector(getGenre);\n  const count = useSelector(getCount);\n  const promoFilm = useSelector(getPromoFilm);\n\n  const dispatch = useDispatch();\n\n  const onUserClick = (genreName: string) => {\n    dispatch(changeGenre(genreName));\n  };\n\n  const onShowMoreClick = () => {\n    dispatch(showMoreFilms());\n  };\n\n  const onClick = (movieId: string, status: number) => {\n    dispatch(postMyFilmAction(movieId, Number(!status)));\n    dispatch(fetchPromoFilmAction());\n    dispatch(fetchMyFilmsAction());\n  };\n\n  const handleClick = (evt: MouseEvent<HTMLElement>) => {\n    evt.preventDefault();\n    onClick(String(promoFilm.id), Number(promoFilm.is_favorite));\n  };\n\n  const history = useHistory();\n  const [filteredFilms, setFilteredFilms] = useState(films);\n\n  useEffect(() => {\n    const isAllGenresTab = genre === 'All genres';\n    const tempFilteredFilms = isAllGenresTab ? [...films] : films.filter((film) => film.genre === genre);\n    if (count < tempFilteredFilms.length) {\n      setFilteredFilms(tempFilteredFilms.slice(0, count));\n    } else {\n      setFilteredFilms(tempFilteredFilms);\n    }\n  }, [genre, count, films]);\n\n  return (\n    <div>\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src=\"img/bg-the-grand-budapest-hotel.jpg\" alt=\"The Grand Budapest Hotel\" />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <Header />\n\n        {!!films.length &&\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={promoFilm.poster_image} alt={promoFilm.name} width=\"218\" height=\"327\" />\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{promoFilm.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{promoFilm.genre}</span>\n                <span className=\"film-card__year\">{promoFilm.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <button\n                  className=\"btn btn--play film-card__button\"\n                  type=\"button\"\n                  onClick={() => history.push(`/player/${promoFilm.id}`)}\n                >\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use href=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </button>\n                <button\n                  className=\"btn btn--list film-card__button\"\n                  type=\"button\"\n                  onClick={handleClick}\n                >\n                  <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                    <use href={`#${promoFilm.is_favorite ? 'in-list' : 'add'}`}></use>\n                  </svg>\n                  <span>My list</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>}\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n          <GenreList films={films} genre={genre} onUserClick={onUserClick}/>\n\n          <MovieList films={filteredFilms}/>\n\n          {count <= filteredFilms.length && <ShowMore onShowMoreClick={onShowMoreClick}/>}\n\n        </section>\n\n        <Footer />\n\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import React, {useState, ChangeEvent} from 'react';\nimport Logo from '../logo/logo';\nimport {useParams} from 'react-router-dom';\nimport {FormEvent} from 'react';\nimport {CommentPost} from '../../types/comment';\nimport {postCommentAction} from '../../store/api-actions';\nimport {AppRoute} from '../../const';\nimport {useHistory} from 'react-router-dom';\nimport {getFilms} from '../../store/films-data/selectors';\nimport {getAuthorizationStatus, getUserAvatarUrl} from '../../store/user-data/selectors';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Authorization from '../authorization-status/authorization-status'\n\ntype AddReviewParams = {\n  movieId: string;\n}\n\nfunction AddReview(): JSX.Element {\n  const films = useSelector(getFilms);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const userAvatarUrl = useSelector(getUserAvatarUrl);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (movieId: string, {rating, comment}: CommentPost) => {\n    dispatch(postCommentAction(movieId, {rating, comment}));\n  };\n\n  const { movieId } = useParams<AddReviewParams>();\n  const film = films.find((item) => item.id === parseInt(movieId, 10));\n\n  const [review, setReview] = useState({'rating': 0, 'comment': ''});\n\n  const history = useHistory();\n\n  const ratingHandler = (rating: number) => {\n    setReview((prevState) => ({...prevState, 'rating': rating}));\n  };\n\n  const commentHandler = (evt: ChangeEvent<HTMLTextAreaElement>) => {\n    evt.preventDefault();\n    setReview((prevState) => ({...prevState, 'comment': evt.target.value}));\n  };\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    onSubmit(movieId, {\n      rating: review.rating,\n      comment: review.comment,\n    });\n    history.push(`${AppRoute.MoviePage}${movieId}`);\n  };\n\n  return (\n    <section className=\"film-card film-card--full\">\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={film?.background_image} alt={film?.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <a href=\"film-page.html\" className=\"breadcrumbs__link\">{film?.name}</a>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                <a className=\"breadcrumbs__link\" href=\"/\">Add review</a>\n              </li>\n            </ul>\n          </nav>\n\n          <ul className=\"user-block\">\n            <li className=\"user-block__item\">\n              <div\n                className=\"user-block__avatar\"\n                onClick={() => history.push(AppRoute.MyList)}\n              >\n                <img src={userAvatarUrl} alt=\"User avatar\" width=\"63\" height=\"63\" />\n              </div>\n            </li>\n            <li className=\"user-block__item\">\n              <Authorization authorizationStatus={authorizationStatus}/>\n            </li>\n          </ul>\n        </header>\n\n        <div className=\"film-card__poster film-card__poster--small\">\n          <img src={film?.poster_image} alt={film?.name} width=\"218\" height=\"327\" />\n        </div>\n      </div>\n\n      <div className=\"add-review\">\n        <form\n          action=\"#\"\n          className=\"add-review__form\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"rating\">\n            <div className=\"rating__stars\">\n              {[10, 9, 8, 7, 6, 5, 4, 3, 2, 1].map((idx) => {\n                const component = (\n                  <React.Fragment key={idx}>\n                    <input onClick={() => ratingHandler(idx)} className=\"rating__input\" id={`star-${idx}`} type=\"radio\" name=\"rating\" value={idx}/>\n                    <label className=\"rating__label\" htmlFor={`star-${idx}`}>{`Rating ${idx}`}</label>\n                  </React.Fragment>\n                );\n                return component;\n              })}\n            </div>\n          </div>\n          <div className=\"add-review__text\">\n            <textarea\n              className=\"add-review__textarea\"\n              name=\"review-text\"\n              id=\"review-text\"\n              placeholder=\"Review text\"\n              onChange={(evt: ChangeEvent<HTMLTextAreaElement>) => commentHandler(evt)}\n            >\n            </textarea>\n            <div className=\"add-review__submit\">\n              <button\n                className=\"add-review__btn\"\n                type=\"submit\"\n              >\n              Post\n              </button>\n            </div>\n\n          </div>\n        </form>\n      </div>\n\n    </section>\n  );\n}\n\nexport default AddReview;\n","import {Film} from '../../types/film';\nimport {Fragment} from 'react';\n\ntype MoviePageOverviewParams = {\n  film: Film | undefined,\n};\n\nfunction MoviePageOverview({film}: MoviePageOverviewParams): JSX.Element {\n  return (\n    <Fragment>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{film?.rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">Very good</span>\n          <span className=\"film-rating__count\">{film?.scores_count}</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>{film?.description}</p>\n\n        <p className=\"film-card__director\"><strong>Director: {film?.director}</strong></p>\n\n        <p className=\"film-card__starring\"><strong>Starring: {film?.starring.join(', ')}</strong></p>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default MoviePageOverview;\n","import {Film} from '../../types/film';\n\ntype MoviePageDetailsParams = {\n  film: Film | undefined,\n};\n\nfunction MoviePageDetails({film}: MoviePageDetailsParams): JSX.Element {\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{film?.director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\">\n            {film?.starring.join('\\n')}\n          </span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{film?.run_time}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{film?.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{film?.released}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default MoviePageDetails;\n","import {Comments} from '../../types/comment';\n\ntype MoviePageReviewsParams = {\n  comments: Comments,\n};\n\nfunction MoviePageReviews({comments}: MoviePageReviewsParams): JSX.Element {\n  let firstHalfOfComments: Comments = [];\n  let secondHalfOfComments: Comments = [];\n  if (comments.length) {\n    const firstHalfOfCommentsCount = Math.ceil(comments.length / 2);\n    firstHalfOfComments = comments.slice(0, firstHalfOfCommentsCount);\n    secondHalfOfComments = comments.slice(firstHalfOfCommentsCount, comments.length);\n  }\n\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      <div className=\"film-card__reviews-col\">\n        {firstHalfOfComments.map((comment) =>\n          (\n            <div className=\"review\" key={comment.id}>\n              <blockquote className=\"review__quote\">\n                <p className=\"review__text\">{comment.comment}</p>\n\n                <footer className=\"review__details\">\n                  <cite className=\"review__author\">{comment.user.name}</cite>\n                  <time className=\"review__date\" dateTime=\"2016-12-24\">December 24, 2016</time>\n                </footer>\n              </blockquote>\n\n              <div className=\"review__rating\">{comment.rating}</div>\n            </div>\n          ),\n        )}\n      </div>\n      <div className=\"film-card__reviews-col\">\n        {secondHalfOfComments.map((comment) =>\n          (\n            <div className=\"review\" key={comment.id}>\n              <blockquote className=\"review__quote\">\n                <p className=\"review__text\">{comment.comment}</p>\n\n                <footer className=\"review__details\">\n                  <cite className=\"review__author\">{comment.user.name}</cite>\n                  <time className=\"review__date\" dateTime=\"2016-12-24\">December 24, 2016</time>\n                </footer>\n              </blockquote>\n\n              <div className=\"review__rating\">{comment.rating}</div>\n            </div>\n          ),\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MoviePageReviews;\n","import Footer from '../footer/footer';\nimport {Film} from '../../types/film';\nimport {useCallback, useState, useEffect} from 'react';\nimport {Link, useParams, useHistory} from 'react-router-dom';\nimport MoviePageOverview from '../movie-page-overview/movie-page-overview';\nimport MoviePageDetails from '../movie-page-details/movie-page-details';\nimport MoviePageReviews from '../movie-page-reviews/movie-page-reviews';\nimport MovieList from '../movie-list/movie-list';\nimport {ThunkAppDispatch} from '../../types/action';\nimport {fetchMyFilmsAction, fetchCommentAction, fetchSimilarFilmsAction,fetchCurrentFilmAction, postMyFilmAction} from '../../store/api-actions';\nimport {store} from '../../index';\nimport {AuthorizationStatus} from '../../const';\nimport Header from '../header/header';\nimport {getCurrentFilm, getSimilarFilms} from '../../store/films-data/selectors';\nimport {getComments} from '../../store/films-other-data/selectors';\nimport {getAuthorizationStatus} from '../../store/user-data/selectors';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {MouseEvent} from 'react';\n\ntype MoviePageParams = {\n  movieId: string;\n};\n\nfunction MoviePage(): JSX.Element {\n  const currentFilm = useSelector(getCurrentFilm);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const comments = useSelector(getComments);\n  const similarFilms = useSelector(getSimilarFilms);\n\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const onFavoriteClick = (movieId: string, status: number) => {\n    dispatch(postMyFilmAction(movieId, status));\n    dispatch(fetchCurrentFilmAction(movieId));\n    dispatch(fetchMyFilmsAction());\n  };\n\n  const { movieId } = useParams<MoviePageParams>();\n\n  const [component, setComponent] = useState<string>('Overview');\n\n  useEffect(() => {\n    (store.dispatch as ThunkAppDispatch)(fetchCommentAction(movieId));\n    (store.dispatch as ThunkAppDispatch)(fetchSimilarFilmsAction(movieId));\n    (store.dispatch as ThunkAppDispatch)(fetchCurrentFilmAction(movieId));\n  }, [movieId]);\n\n  const handleClick = (evt: MouseEvent<HTMLElement>) => {\n    evt.preventDefault();\n    currentFilm.is_favorite ? onFavoriteClick(movieId, 0) : onFavoriteClick(movieId, 1);\n  };\n\n  const getComponentByType = (type: string | null, filmData: Film | undefined) => {\n    switch (type) {\n      case 'Overview':\n        return <MoviePageOverview film={filmData}/>;\n      case 'Details':\n        return <MoviePageDetails film={filmData}/>;\n      case 'Reviews':\n        return <MoviePageReviews comments={comments}/>;\n    }\n  };\n\n  const onTabClick = useCallback((evt) => {\n    evt.preventDefault();\n    setComponent(evt.currentTarget.innerText);\n  },[]);\n\n  return (\n    <div>\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={currentFilm.background_image} alt={currentFilm.name} />\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <Header />\n\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{currentFilm.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{currentFilm.genre}</span>\n                <span className=\"film-card__year\">{currentFilm.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <button\n                  className=\"btn btn--play film-card__button\"\n                  type=\"button\"\n                  onClick={() => history.push(`/player/${currentFilm.id}`)}\n                >\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use href=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </button>\n                <button\n                  className=\"btn btn--list film-card__button\"\n                  type=\"button\"\n                  onClick={handleClick}\n                >\n                  <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                    <use href={`#${currentFilm.is_favorite ? 'in-list' : 'add'}`}></use>\n                  </svg>\n                  <span>My list</span>\n                </button>\n                {authorizationStatus === AuthorizationStatus.Auth ? <Link className=\"btn film-card__button\" to={`/add-review/${currentFilm.id}`}>Add review</Link> : ''}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img src={currentFilm.poster_image} alt={currentFilm.name} width=\"218\" height=\"327\" />\n            </div>\n            <div className=\"film-card__desc\">\n              <nav className=\"film-nav film-card__nav\">\n                <ul className=\"film-nav__list\">\n                  <li className={`film-nav__item${component === 'Overview' || null ? ' film-nav__item--active' : ''}`}>\n                    <a\n                      href=\"/\"\n                      className=\"film-nav__link\"\n                      onClick={onTabClick}\n                    >Overview\n                    </a>\n                  </li>\n                  <li className={`film-nav__item${component === 'Details' ? ' film-nav__item--active' : ''}`}>\n                    <a\n                      href=\"/\"\n                      className=\"film-nav__link\"\n                      onClick={onTabClick}\n                    >Details\n                    </a>\n                  </li>\n                  <li className={`film-nav__item${component === 'Reviews' ? ' film-nav__item--active' : ''}`}>\n                    <a\n                      href=\"/\"\n                      className=\"film-nav__link\"\n                      onClick={onTabClick}\n                    >Reviews\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n              {getComponentByType(component, currentFilm)}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          <h2 className=\"catalog__title\">More like this</h2>\n\n          <MovieList films={similarFilms} />\n\n        </section>\n\n        <Footer />\n\n      </div>\n    </div>\n  );\n}\n\nexport default MoviePage;\n","import Logo from '../logo/logo';\nimport Footer from '../footer/footer';\nimport {getMyFilms} from '../../store/films-data/selectors';\nimport {getAuthorizationStatus, getUserAvatarUrl} from '../../store/user-data/selectors';\nimport {useSelector} from 'react-redux';\nimport MovieCard from '../movie-card/movie-card';\nimport Authorization from '../authorization-status/authorization-status'\n\nfunction MyList(): JSX.Element {\n  const myFilms = useSelector(getMyFilms);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const userAvatarUrl = useSelector(getUserAvatarUrl);\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <Logo />\n        </div>\n\n        <h1 className=\"page-title user-page__title\">My list</h1>\n\n        <ul className=\"user-block\">\n          <li className=\"user-block__item\">\n            <div className=\"user-block__avatar\">\n              <img src={userAvatarUrl} alt=\"User avatar\" width=\"63\" height=\"63\" />\n            </div>\n          </li>\n          <li className=\"user-block__item\">\n            <Authorization authorizationStatus={authorizationStatus}/>\n          </li>\n        </ul>\n      </header>\n\n      <section className=\"catalog\">\n        <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n        <div className=\"catalog__films-list\">\n          {myFilms.map((film) => <MovieCard film={film} key={film.id} />)}\n        </div>\n      </section>\n\n      <Footer />\n\n    </div>\n  );\n}\n\n\nexport default MyList;\n\n","import {useParams} from 'react-router-dom';\nimport {useHistory} from 'react-router-dom';\nimport {getFilms} from '../../store/films-data/selectors';\nimport {useSelector} from 'react-redux';\nimport {useRef, useCallback, useState, useEffect} from 'react';\n\ntype PlayerParams = {\n  movieId: string;\n}\n\nfunction Player(): JSX.Element {\n  const films = useSelector(getFilms);\n\n  const { movieId } = useParams<PlayerParams>();\n  const film = films.find((item) => item.id === parseInt(movieId, 10));\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  const history = useHistory();\n\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  const [durationTime, setDuration] = useState<string>('00:00');\n\n  const [progressBar, setProgressBar] = useState('0');\n\n  const [spinnerComponent, setSpinnerComponent] = useState(false);\n\n  const convertSecondsToTime = (seconds: number, currentSeconds: number) => {\n    const date = new Date(0, 0, 0, 0, 0, seconds - currentSeconds);\n    const convertedHours = date.getHours();\n    const convertedMinutes = date.getMinutes();\n    const convertedSeconds = date.getSeconds();\n\n    const result = convertedHours > 0 ? [convertedHours, convertedMinutes, convertedSeconds] : [convertedMinutes, convertedSeconds];\n    const resultWithZeroPad = result.map((timeMember) => timeMember < 10 ? `0${timeMember}` : `${timeMember}`);\n    return resultWithZeroPad.join(':');\n  };\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      video.onloadeddata = () => {\n        const duration = convertSecondsToTime(video.duration, 0);\n        setDuration(duration);\n      };\n      video.ontimeupdate = () => {\n        const duration = convertSecondsToTime(video.duration, video.currentTime);\n        setDuration(duration);\n        if (video.currentTime !== 0) {\n          const progressValue = video.currentTime / video.duration * 100;\n          setProgressBar(String(progressValue));\n        }\n        setSpinnerComponent(false);\n      };\n    }\n    return () => {\n      if (video) {\n        video.ontimeupdate = null;\n      }\n    };\n  }, [videoRef]);\n\n  const handlePausedChange = useCallback((evt) => {\n    evt.preventDefault();\n    if (videoRef.current && videoRef.current.paused) {\n      videoRef.current.play();\n    } else if (videoRef.current && !videoRef.current.paused) {\n      videoRef.current.pause();\n    }\n  },[]);\n\n  const handleFullScreenClick = () => {\n    videoRef.current?.requestFullscreen();\n  };\n\n  console.log(spinnerComponent);\n\n  return (\n    <div className=\"player\">\n      <video\n        src={film?.video_link}\n        className=\"player__video\"\n        poster={film?.preview_image}\n        ref={videoRef}\n        onPlay={() => videoRef.current ? setIsPlaying(videoRef.current.paused) : ''}\n        onPause={() => videoRef.current ? setIsPlaying(videoRef.current.paused) : ''}\n        onWaiting={() => setSpinnerComponent(true)}\n      >\n      </video>\n\n      <div className=\"player__loading-spinner\">\n        <svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\n          <use href=\"#loading-spinner\"></use>\n        </svg>\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"player__exit\"\n        onClick={() => history.push(`/movie-page/${film?.id}`)}\n      >\n      Exit\n      </button>\n\n      <div className=\"player__controls\">\n        <div className=\"player__controls-row\">\n          <div className=\"player__time\">\n            <progress className=\"player__progress\" value={progressBar} max=\"100\"></progress>\n            <div className=\"player__toggler\" style={{left: `${progressBar}%`}}>Toggler</div>\n          </div>\n          <div className=\"player__time-value\">{`-${durationTime}`}</div>\n        </div>\n\n        <div className=\"player__controls-row\">\n          <button\n            type=\"button\"\n            className=\"player__play\"\n            onClick={handlePausedChange}\n          >\n            <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n              <use href={`#${isPlaying ? 'play-s' : 'pause'}`}></use>;\n            </svg>\n            <span>Play</span>\n          </button>\n          <div className=\"player__name\">Transpotting</div>\n\n          <button\n            type=\"button\"\n            className=\"player__full-screen\"\n            onClick={handleFullScreenClick}\n          >\n            <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n              <use href=\"#full-screen\"></use>\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n","import Logo from '../logo/logo';\nimport Footer from '../footer/footer';\nimport {AuthData} from '../../types/auth-data';\nimport {loginAction} from '../../store/api-actions';\nimport {useRef, FormEvent} from 'react';\nimport {AppRoute} from '../../const';\nimport {useHistory} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\n\nfunction SignIn(): JSX.Element {\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (authData: AuthData) => {\n    dispatch(loginAction(authData));\n  };\n\n  const history = useHistory();\n\n  const emailRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    if (emailRef.current !== null && passwordRef.current !== null) {\n      onSubmit({\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n      });\n    }\n    history.push(AppRoute.Root);\n  };\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <Logo />\n        </div>\n\n        <h1 className=\"page-title user-page__title\">Sign in</h1>\n      </header>\n\n      <div className=\"sign-in user-page__content\">\n        <form\n          action=\"#\"\n          className=\"sign-in__form\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"sign-in__fields\">\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"email\"\n                placeholder=\"Email address\"\n                name=\"user-email\"\n                id=\"user-email\"\n                ref={emailRef}\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n            </div>\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"user-password\"\n                id=\"user-password\"\n                ref={passwordRef}\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n            </div>\n          </div>\n          <div className=\"sign-in__submit\">\n            <button\n              className=\"sign-in__btn\"\n              type=\"submit\"\n            >Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default SignIn;\n","import {Link} from 'react-router-dom';\n\nfunction NotFoundScreen(): JSX.Element {\n  return (\n    <section className=\"game__screen\">\n      <h1>404. Page not found</h1>\n      <Link to=\"/\">Вернуться на главную</Link>\n    </section>\n  );\n}\n\nexport default NotFoundScreen;\n","import {Route, Redirect} from 'react-router-dom';\nimport {RouteProps} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user-data/selectors';\nimport {useSelector} from 'react-redux';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const {exact, path, render} = props;\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render()\n          : <Redirect to={AppRoute.SignIn} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","function LoadingScreen(): JSX.Element {\n  return (\n    <p>Loading ...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import {Switch, Route, BrowserRouter} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport Main from '../main/main';\nimport AddReview from '../add-review/add-review';\nimport MoviePage from '../movie-page/movie-page';\nimport MyList from '../my-list/my-list';\nimport Player from '../player/player';\nimport SignIn from '../sign-in/sign-in';\nimport NotFoundScreen from '../not-found-screen/not-found-screen';\nimport PrivateRoute from '../private-route/private-route';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {getAuthorizationStatus, getIsDataLoaded} from '../../store/user-data/selectors';\nimport {useSelector} from 'react-redux';\n\nconst isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n\nfunction App(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const isDataLoaded = useSelector(getIsDataLoaded);\n\n  if (isCheckedAuth(authorizationStatus) || !isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={AppRoute.Root} component={Main}/>\n        <PrivateRoute\n          exact\n          path={AppRoute.MyList}\n          render={() => <MyList />}\n        >\n        </PrivateRoute>\n        <Route exact path={AppRoute.MoviePage} component={MoviePage}/>\n        <Route exact path={AppRoute.AddReview} component={AddReview}/>\n        <Route exact path={AppRoute.Player} component={Player}/>\n        <Route exact path={AppRoute.SignIn} component={SignIn}/>\n        <Route>\n          <NotFoundScreen />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createAPI} from './services/api';\nimport {Provider} from 'react-redux';\nimport {configureStore} from '@reduxjs/toolkit';\nimport App from './components/app/app';\nimport {rootReducer} from './store/root-reducer';\nimport {requireAuthorization} from './store/action';\nimport {fetchFilmsAction, fetchPromoFilmAction, checkAuthAction} from './store/api-actions';\nimport {AuthorizationStatus} from './const';\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)),\n);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }),\n});\n\nstore.dispatch(checkAuthAction());\nstore.dispatch(fetchFilmsAction());\nstore.dispatch(fetchPromoFilmAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}